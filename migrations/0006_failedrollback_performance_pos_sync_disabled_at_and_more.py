# Generated by Django 4.2.11 on 2025-07-18 06:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('scrapers', '0005_add_performance_pos_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='FailedRollback',
            fields=[
                ('failed_rollback_id', models.AutoField(primary_key=True, serialize=False)),
                ('operation_id', models.CharField(help_text='Unique identifier for the failed POS operation', max_length=100)),
                ('action_type', models.CharField(help_text="Type of rollback action that failed (e.g., 'delete_stubhub_inventory')", max_length=50)),
                ('action_data', models.JSONField(help_text='Data required to perform the rollback action')),
                ('error_message', models.TextField(help_text='Error message from the failed rollback attempt')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When this rollback was manually resolved', null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes about how this rollback was resolved', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'failed_rollback',
            },
        ),
        migrations.AddField(
            model_name='performance',
            name='pos_sync_disabled_at',
            field=models.DateTimeField(blank=True, help_text='When POS sync was disabled for this performance', null=True),
        ),
        migrations.AddField(
            model_name='performance',
            name='pos_sync_disabled_by',
            field=models.ForeignKey(blank=True, help_text='User who disabled POS sync for this performance', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disabled_performances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='performance',
            name='pos_sync_enabled',
            field=models.BooleanField(default=True, help_text='Whether POS sync is enabled for this performance'),
        ),
        migrations.AddField(
            model_name='performance',
            name='pos_sync_reenabled_at',
            field=models.DateTimeField(blank=True, help_text='When POS sync was re-enabled for this performance', null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='last_pos_sync_attempt',
            field=models.DateTimeField(blank=True, help_text='Timestamp of last POS sync attempt.', null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='locked_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when this pack was locked.', null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='locked_by',
            field=models.CharField(blank=True, help_text='Process ID or identifier that currently has this pack locked.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='manually_delisted_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when this pack was manually delisted.', null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='manually_delisted_by',
            field=models.ForeignKey(blank=True, help_text='User who manually delisted this pack.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manually_delisted_packs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='manually_delisted_reason',
            field=models.TextField(blank=True, help_text='User-provided reason for manual delisting.', null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='manually_enabled_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when this pack was manually re-enabled.', null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='manually_enabled_by',
            field=models.ForeignKey(blank=True, help_text='User who manually re-enabled this pack.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manually_enabled_packs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='pack_state',
            field=models.CharField(choices=[('create', 'Create'), ('split', 'Split'), ('merge', 'Merge'), ('shrink', 'Shrink'), ('delist', 'Delist'), ('transformed', 'Transformed')], db_index=True, default='create', help_text='Lifecycle state indicating how this pack came to be or what happened to it.', max_length=20),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='pack_status',
            field=models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], db_index=True, default='active', help_text='Current operational status in our system. Controls dashboard visibility and scraper logic.', max_length=20),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='pos_operation_id',
            field=models.CharField(blank=True, help_text='Unique identifier for POS operation (for rollback if needed).', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='pos_operation_status',
            field=models.CharField(blank=True, help_text='Status of current POS operation (for rollback tracking).', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='pos_status',
            field=models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('failed', 'Failed'), ('suspended', 'Suspended'), ('under_review', 'Under Review')], db_index=True, default='pending', help_text='Current status in StubHub inventory system. Controls POS sync behavior.', max_length=20),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='pos_sync_attempts',
            field=models.IntegerField(default=0, help_text='Number of times POS sync has been attempted for this pack.'),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='pos_sync_error',
            field=models.TextField(blank=True, help_text='Last error message from POS sync attempt.', null=True),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='synced_to_pos',
            field=models.BooleanField(db_index=True, default=False, help_text="Whether this pack's current state is synchronized with StubHub."),
        ),
        migrations.AddField(
            model_name='seatpack',
            name='version',
            field=models.IntegerField(default=0, help_text='Version number for optimistic locking. Incremented on each update.'),
        ),
        migrations.AlterField(
            model_name='seatpack',
            name='creation_event',
            field=models.CharField(blank=True, choices=[('create', 'Create'), ('split', 'Split'), ('shrink', 'Shrink'), ('merge', 'Merge')], help_text='DEPRECATED: Use pack_state instead', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='seatpack',
            name='delist_reason',
            field=models.CharField(blank=True, choices=[('manual_delist', 'Manual Delist'), ('performance_disabled', 'Performance POS Disabled'), ('transformed', 'Transformed'), ('vanished', 'Vanished'), ('structure_change', 'Structure Change'), ('admin_hold', 'Admin Hold')], db_index=True, help_text="Specific reason for delisting. Required when pack_state is 'delist' or 'transformed'.", max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='seatpack',
            name='is_active',
            field=models.BooleanField(default=True, help_text='DEPRECATED: Use pack_status instead'),
        ),
        migrations.AlterField(
            model_name='seatpack',
            name='manually_delisted',
            field=models.BooleanField(default=False, help_text="DEPRECATED: Use delist_reason='manual_delist' instead"),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['pack_status', 'pos_status', 'synced_to_pos'], name='sp_pos_sync_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['performance', 'pack_status'], name='sp_perf_status_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['performance', 'pos_status', 'synced_to_pos'], name='sp_perf_pos_sync_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['delist_reason', 'manually_delisted_at'], name='sp_manual_audit_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['pack_state', 'delist_reason'], name='sp_state_reason_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['pos_sync_attempts', 'last_pos_sync_attempt'], name='sp_retry_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['created_at', 'updated_at'], name='sp_time_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['locked_by', 'locked_at'], name='sp_lock_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['version'], name='sp_version_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['pack_status', 'pack_state', 'pos_status'], name='sp_dashboard_idx'),
        ),
        migrations.AddIndex(
            model_name='seatpack',
            index=models.Index(fields=['pos_operation_id', 'pos_operation_status'], name='sp_rollback_idx'),
        ),
        migrations.AddConstraint(
            model_name='seatpack',
            constraint=models.UniqueConstraint(fields=('internal_pack_id',), name='sp_unique_pack_id'),
        ),
        migrations.AddConstraint(
            model_name='seatpack',
            constraint=models.UniqueConstraint(condition=models.Q(('locked_by__isnull', False)), fields=('locked_by',), name='sp_unique_lock_per_process'),
        ),
        migrations.AddField(
            model_name='failedrollback',
            name='resolved_by',
            field=models.ForeignKey(blank=True, help_text='User who manually resolved this rollback', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='failedrollback',
            index=models.Index(fields=['operation_id'], name='failed_roll_operati_b76123_idx'),
        ),
        migrations.AddIndex(
            model_name='failedrollback',
            index=models.Index(fields=['action_type'], name='failed_roll_action__c6e7d0_idx'),
        ),
        migrations.AddIndex(
            model_name='failedrollback',
            index=models.Index(fields=['resolved_at'], name='failed_roll_resolve_421579_idx'),
        ),
        migrations.AddIndex(
            model_name='failedrollback',
            index=models.Index(fields=['created_at'], name='failed_roll_created_e0d2ab_idx'),
        ),
    ]
