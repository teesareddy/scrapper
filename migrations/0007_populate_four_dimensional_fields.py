# Generated by Django 4.2.11 on 2025-07-18 06:38

from django.db import migrations


def populate_four_dimensional_fields(apps, schema_editor):
    """
    Populate the new four-dimensional fields from legacy fields.
    This ensures backward compatibility during the transition.
    """
    SeatPack = apps.get_model('scrapers', 'SeatPack')
    
    # Update all seat packs in batches to avoid memory issues
    batch_size = 1000
    total_updated = 0
    
    # Get total count for progress tracking
    total_packs = SeatPack.objects.count()
    print(f"Populating four-dimensional fields for {total_packs} seat packs...")
    
    # Process in batches
    offset = 0
    while True:
        batch = list(SeatPack.objects.all()[offset:offset + batch_size])
        if not batch:
            break
            
        packs_to_update = []
        for pack in batch:
            # Populate pack_status from is_active
            if pack.is_active:
                pack.pack_status = 'active'
            else:
                pack.pack_status = 'inactive'
            
            # Populate pack_state from creation_event
            if pack.creation_event:
                pack.pack_state = pack.creation_event
            else:
                pack.pack_state = 'create'  # Default for existing packs
            
            # Populate pos_status based on existing POS integration
            if hasattr(pack, 'pos_listing') and pack.pos_listing and pack.pos_listing.status == 'ACTIVE':
                pack.pos_status = 'active'
                pack.synced_to_pos = True
            else:
                pack.pos_status = 'pending'  # Will need to be synced
                pack.synced_to_pos = False
            
            # Handle legacy delist_reason mapping
            if pack.manually_delisted:
                pack.delist_reason = 'manual_delist'
                pack.pack_state = 'delist'
                pack.pack_status = 'inactive'
            
            # Set default values for new fields
            pack.version = 1  # Start with version 1
            pack.pos_sync_attempts = 0
            
            packs_to_update.append(pack)
        
        # Bulk update the batch
        if packs_to_update:
            SeatPack.objects.bulk_update(
                packs_to_update,
                [
                    'pack_status', 'pack_state', 'pos_status', 'synced_to_pos',
                    'delist_reason', 'version', 'pos_sync_attempts'
                ]
            )
            total_updated += len(packs_to_update)
            print(f"Updated {total_updated}/{total_packs} seat packs...")
        
        offset += batch_size
    
    print(f"Successfully populated four-dimensional fields for {total_updated} seat packs")


def reverse_four_dimensional_fields(apps, schema_editor):
    """
    Reverse migration: reset the four-dimensional fields.
    Note: This will lose the enhanced state information.
    """
    SeatPack = apps.get_model('scrapers', 'SeatPack')
    
    # Reset all new fields to defaults
    SeatPack.objects.update(
        pack_status='active',
        pack_state='create',
        pos_status='pending',
        synced_to_pos=False,
        version=0,
        pos_sync_attempts=0,
        # Clear audit fields
        manually_delisted_by=None,
        manually_delisted_at=None,
        manually_delisted_reason=None,
        manually_enabled_by=None,
        manually_enabled_at=None,
        # Clear concurrency fields
        locked_by=None,
        locked_at=None,
        # Clear rollback fields
        pos_operation_id=None,
        pos_operation_status=None,
        pos_sync_error=None,
        last_pos_sync_attempt=None,
    )
    
    print("Reset four-dimensional fields to defaults")


class Migration(migrations.Migration):

    dependencies = [
        ('scrapers', '0006_failedrollback_performance_pos_sync_disabled_at_and_more'),
    ]

    operations = [
        migrations.RunPython(
            populate_four_dimensional_fields,
            reverse_four_dimensional_fields,
            atomic=True
        ),
    ]
